#include <Arduino.h>
#include <stdint.h>
#include "config.h"
#include <driver/ledc.h>
//definir salidas del sistema y sensor de temperatura
#define senstemp 34 
#define ledrojo  21
#define ledverde 22 
#define ledamarillo 19 
#define motorservo 2 

//definir canal, frecuencia y resolucion para PWM (hay canales internos)
#define canalrojo  8 
#define canalverde 9
#define canalamarillo 10
#define canalservo 0

#define freqPWM 50
#define resPWM 10

//Agregar varoables float para podes usar decimales
float sensortemp = 0;
float sensor = 0; 

volatile int centenas = 0; 
volatile int decenas = 0;
volatile int unidades = 0; 
volatile int digito = 0; 
//definición de pines para los segmentos, el punto y los dígitos del display de 7 segmentos
const int segment[] = {27,12,33,25,26,13,14};  
const int punto = 32;  
const int digitos[] = {18, 5, 23};  

//Variables a utiliza en ADAFRUIT
String color;

//se trabajará con un timer
//Se configura el timer
hw_timer_t *timer0 = NULL;

// Configurarlo para le funcionamiento en Adafruit
AdafruitIO_Feed *tempcanal = io.feed("Temperatura");
AdafruitIO_Feed *semaforocanal = io.feed("Servo");

//interrupciones del boton y su estructura
portMUX_TYPE mux = portMUX_INITIALIZER_UNLOCKED;

struct Button {
  const uint8_t PIN;
  bool pressed;
  bool laststate;
};

Button boton = {15, false, false};

void IRAM_ATTR BOTON_ISR(){
  portENTER_CRITICAL_ISR(&mux);
  boton.pressed = true;
  portEXIT_CRITICAL_ISR(&mux);
}
//declaración de funciones a utilizar durante el trabajo.
void funciontempe(void); 
void funcionsemaforo(void);
void funciondisplay(void); 
void printdisplay(int numero); 
void Timer(void);


  // Multiplexeo de los tres dígitos
 //Configuración para le primer digito(centenas)
  if (digito == 0) {
    digitalWrite(digitos[0], HIGH);
    digitalWrite(digitos[1], LOW);  
    digitalWrite(digitos[2], LOW);  
    printdisplay(centenas);
    digito = 1;
  } else if (digito == 1) {
     // Enciende el segundo dígito
    digitalWrite(digitos[0], LOW); 
    digitalWrite(digitos[1], HIGH);  
    digitalWrite(digitos[2], LOW);  
    printdisplay(decenas);
    digitalWrite(punto, LOW);  // Enciende el punto decimal
    
    digito = 2;
  } else if (digito == 2) {
    //enciende tercer digito (unidades)
    digitalWrite(digitos[0], LOW);
    digitalWrite(digitos[1], LOW);  
    digitalWrite(digitos[2], HIGH); 
    digitalWrite(punto, HIGH);  
    printdisplay(unidades);

    digito = 0;
  }

}
//funciones para las salidas
void rojo(void);
void verde(void);
void amarillo(void);
void servo(void);
void send(float enviar1, String enviar2);

void setup() {

rojo();
verde();
amarillo();
servo();

  //velocidad del serial monitor (monitor-speed)
  Serial.begin(115200);

  initTimer0();
//contadores para pasar por los arreglos
   for (int i = 0; i < 7; i++) {  
    pinMode(segment[i], OUTPUT);
  }
  pinMode(punto, OUTPUT);
  for (int i = 0; i < 3; i++) {
    pinMode(digitos[i], OUTPUT);
  }
//definir estado del boton
  pinMode(boton.PIN, INPUT_PULLUP);
  attachInterrupt(boton.PIN, BOTON_ISR, RISING);

  //Conexión con Adafruit (se observa en el serial print)
  while(! Serial);

  Serial.print("Conectando...");

  // connect to io.adafruit.com
  io.connect();

  // wait for a connection
  while(io.status() < AIO_CONNECTED) {
    Serial.print(".");
    delay(250);
  }
